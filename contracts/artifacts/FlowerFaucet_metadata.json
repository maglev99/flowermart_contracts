{
	"compiler": {
		"version": "0.8.4+commit.c7e474f2"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_addr",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "ClaimFlower",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_addr",
						"type": "address"
					}
				],
				"name": "claim",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "claimableAmount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "flowerConductor",
				"outputs": [
					{
						"internalType": "contract FlowerConductor",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "lastClaimedTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "refreshTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "setClaimableAmount",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_addr",
						"type": "address"
					}
				],
				"name": "setFlowerConductor",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_time",
						"type": "uint256"
					}
				],
				"name": "setRefreshTime",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/FlowerFaucet.sol": "FlowerFaucet"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
			"license": "MIT",
			"urls": [
				"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
				"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"contracts/FlowerCoinStorage.sol": {
			"keccak256": "0x9c6b8033a7b9bed388fbfd9da438a70f104ab0b0cc400ca67d49e963b1b63157",
			"license": "MIT",
			"urls": [
				"bzz-raw://a54a3604879467d6d018c381bfe4796f9f7dbb6baa52f457dd78848ab51e6065",
				"dweb:/ipfs/QmcMWEZwWnZGKRfX7DaoHawC2PZCTWtswZhDv4aPsVHdfB"
			]
		},
		"contracts/FlowerConductor.sol": {
			"keccak256": "0x3566a072680c978828cdc1947bb79498119db0464a17874e850830be9a9a93f2",
			"license": "MIT",
			"urls": [
				"bzz-raw://f9875347c6dd243004545cc0498e01c879929ca4ebb7f3609e96c0be5b57799f",
				"dweb:/ipfs/QmakbCfUpJZbbxhN9169Zct5F4XqVn2CSbZa84Py5nvASd"
			]
		},
		"contracts/FlowerFaucet.sol": {
			"keccak256": "0x7031c73b2e7be9225097f1c1060111f95ddda0658183cd986207e2c9848fbc3a",
			"license": "MIT",
			"urls": [
				"bzz-raw://68a5c4d56742b3357fd499284a54b79836be1b5d225e53c7f0a7fe641946e774",
				"dweb:/ipfs/QmSBiDrTxs8LwGaKcdJuKHiWHxwg3h9mN7gJc8GFL8YAzd"
			]
		},
		"contracts/FlowerStorage.sol": {
			"keccak256": "0x4d37f10419197407ed04d0d1c0cf46e60b38e9fb4ad24f1052a7b2c9a1bdfdc9",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a46043883ea6e05d203ae322225ad2785cea0bd5160cc2a55bbdf1209d22a2f",
				"dweb:/ipfs/QmRWABFAcSRQjUYFXbDfjcAopEygy7tnjLdhCHmD9teEvB"
			]
		},
		"contracts/TBNode.sol": {
			"keccak256": "0x0f98f5ac4cb18bcc256b7d482a0ff2fd5995bab04233186b165a9ba40e873820",
			"license": "MIT",
			"urls": [
				"bzz-raw://a6e5cbe3107784806aa0e5df16f64be071fae9895f85567283daadbeb1ca75c2",
				"dweb:/ipfs/QmRyKNPgnquXeqiaGqvRY4jx3hToawobwrfu2cXDN8juBK"
			]
		}
	},
	"version": 1
}